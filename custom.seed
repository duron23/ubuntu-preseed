# Refrences
# https://www.techtarget.com/searchitchannel/feature/Performing-an-automated-Ubuntu-install-using-preseeding
# https://github.com/pin/debian-vm-install/blob/master/preseed.cfg
# https://www.debian.org/releases/stable/example-preseed.txt

# add automatic-ubiquity to force ubiquity install to use preseed file.
# use file=<path> for local preseed file, example file in iso.
# use url=<URL> for file hosted in webserver.

# Enable extras.ubuntu.com.
d-i apt-setup/extras boolean true

# Install the Ubuntu desktop.
tasksel tasksel/first multiselect ubuntu-desktop

#or

#Install the Ubuntu-minimal.
#tasksel	tasksel/first	multiselect ubuntu-minimal

### Localization
# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_IN

# Keyboard
d-i keyboard-configuration/xkb-keymap select us
d-i keyboard-configuration/layoutcode select us
d-i console-setup/ask_detect boolean false
# d-i keyboard-configuration/toggle select No toggling

# Third party drivers & update during installation.
ubiquity ubiquity/use_nonfree boolean true
ubiquity ubiquity/download_updates boolean true

### Network configuration
# Disable network configuration entirely. This is useful for cdrom
# installations on non-networked devices where the network questions,
# warning and long timeouts are a nuisance.
d-i netcfg/enable boolean false

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-host
# d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i hw-detect/load_firmware boolean true

### Account setup
# Skip creation of a root account (normal user account will be able to
# use sudo).
# d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
# d-i passwd/make-user boolean false

# Root password, either in clear text
# d-i passwd/root-password password r00tme
# d-i passwd/root-password-again password r00tme
# or encrypted using a crypt(3)  hash.
# d-i passwd/root-password-crypted password [crypt(3) hash]

# To create a admin user account.
d-i passwd/user-fullname string preseed Admin
d-i passwd/username string preseed-admin
# Normal user's password, either in clear text
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
# or encrypted using a crypt(3) hash. use mkpasswd
# \! will prompt for the password.
d-i passwd/user-password-crypted password !
# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
# d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string Asia/Kolkata

# Controls whether to use NTP to set the clock during the install
# d-i clock-setup/ntp boolean true
# NTP server to use. The default is almost always fine here.
#d-i clock-setup/ntp-server string ntp.example.com

### Partitioning
## Normal partition type
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# all files in single partition
d-i partman-auto/choose_recipe select atomic


d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true

# overwirte confirmation
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
# d-i partman-efi/non_efi_system boolean true
# Ensure the partition table is GPT - this is required for EFI
# d-i partman-partitioning/choose_label select gpt
# d-i partman-partitioning/default_label string gpt

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
d-i partman/mount_style select uuid

### Boot loader installation
# Grub is the boot loader (for x86).

# This is fairly safe to set, it makes grub install automatically to the UEFI
# partition/boot record if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the UEFI partition/boot record, if
# it also finds some other OS, which is less safe as it might not be able to
# boot that other OS.
d-i grub-installer/with_other_os boolean true

# Due notably to potential USB sticks, the location of the primary drive can
# not be determined safely in general, so this needs to be specified:
#d-i grub-installer/bootdev  string /dev/sda
# To install to the primary device (assuming it is not a USB stick):
#d-i grub-installer/bootdev string default

# Optional password for grub, either in clear text
#d-i grub-installer/password password r00tme
#d-i grub-installer/password-again password r00tme
# or encrypted using an MD5 hash, see grub-md5-crypt(8).
#d-i grub-installer/password-crypted password [MD5 hash]

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
#d-i debian-installer/add-kernel-opts string nousb

### Preseeding other packages
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh

# use either in-target or /target for run any command, which has to be runned inside the chroot environment.
# use in-target to run commands inside the chroot environment
# use /target to modify file inside the chroot environment from command run in installer environment.
ubiquity ubiquity/success_command string \
  echo "Start" > /target/etc/test.txt ;\
# adding extra user
# use -p flag to set encrypted passwrd, mkpasswd with -m sha-512 to generate shared passwd. use \ to escape all $ in the hasded password
# generated by mkpassword.
  in-target useradd -m -g 100 -s /bin/bash -k /etc/skel/ preseed-user ;\
# changing hostname.
  host=$(dmidecode -s system-serial-number) ;\
  host=$(echo "UAT-$host" | sed -e "s/[^A-Za-z0-9-]//g") ;\
  sed -i -e "s/unassigned-host/$host/g" /target/etc/hostname ;\
  sed -i -e "s/unassigned-host/$host/g" /target/etc/hosts ;\
  in-target echo "End" >> /etc/test.txt

# Avoid that last message about the install being complete.
# for ubuntu, and include noprompt in the kernel parameter.
# ubiquity ubiquity/reboot boolean true
# for debian.
# d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

# This is how to make the installer shutdown when finished, but not
# reboot into the installed system.
#d-i debian-installer/exit/halt boolean true
# This will power off the machine instead of just halting it.
#d-i debian-installer/exit/poweroff boolean true